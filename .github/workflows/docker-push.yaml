name: Build & Push Image

permissions:
  contents: write
  
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    # 添加手动触发支持

jobs:
  build-and-push:
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        platform: [ amd64 , arm64 ]
        include:
          - platform: amd64
            runner: ubuntu-latest
          - platform: arm64
            runner: ubuntu-24.04-arm

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
          
          # 根据触发方式设置版本号
          if [[ "${{ github.event_name }}" == "push" ]]; then
            # Tag 触发，使用 tag 作为版本号（去掉v前缀）
            VERSION="${GITHUB_REF_NAME#v}"
          else
            # 手动触发，使用 git commit SHA 值
            VERSION=$(git rev-parse --short HEAD)
          fi
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and push image
        run: |
          REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME="ghcr.io/${REPO_NAME}"
          
          # 添加架构标识到镜像标签
          docker buildx build \
            --platform ${{ matrix.platform }} \
            --build-arg VERSION="${VERSION}" \
            -t "${IMAGE_NAME}:${VERSION}-${{ matrix.platform }}" \
            -f Dockerfile \
            --push .

  create-manifest:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
    
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Prepare (manifest)
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            VERSION="${GITHUB_REF_NAME#v}"
          else
            VERSION=$(git rev-parse --short HEAD)
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      
      - name: Create and push multi-arch manifest
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME="ghcr.io/${REPO_NAME}"

          if [[ "${{ github.event_name }}" == "push" ]]; then
            docker buildx imagetools create \
              -t "${IMAGE_NAME}:${VERSION}" \
              -t "${IMAGE_NAME}:latest" \
              "${IMAGE_NAME}:${VERSION}-amd64" \
              "${IMAGE_NAME}:${VERSION}-arm64"
          else
            docker buildx imagetools create \
              -t "${IMAGE_NAME}:${VERSION}" \
              "${IMAGE_NAME}:${VERSION}-amd64" \
              "${IMAGE_NAME}:${VERSION}-arm64"
          fi
